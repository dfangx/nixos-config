# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports =
    [ (modulesPath + "/installer/scan/not-detected.nix")
    ];

  boot.initrd.availableKernelModules = [ "xhci_pci" "uas" ];
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [ ];
  boot.extraModulePackages = [ ];

  fileSystems."/mnt/data" =
    { device = "/dev/disk/by-uuid/3e5d1003-9b5a-4b0a-8606-1d77290bd3d9";
      fsType = "ext4";
      neededForBoot = true;
    };

  fileSystems."/mnt/backup" =
    { device = "/dev/disk/by-uuid/9ead65f5-db1a-4bfa-8a6a-b5cf1d4b6df4";
      fsType = "ext4";
    };

  fileSystems."/var/lib" =
    { device = "/mnt/data/var/lib";
      fsType = "none";
      options = [ "bind" ];
    };

  fileSystems."/var/log" =
    { device = "/mnt/data/var/log";
      fsType = "none";
      options = [ "bind" ];
    };

  fileSystems."/home" =
    { device = "/mnt/data/home";
      fsType = "none";
      options = [ "bind" ];
    };

  fileSystems."/nix" =
    { device = "/mnt/data/nix";
      fsType = "none";
      options = [ "bind" ];
    };

  fileSystems."/srv" =
    { device = "/mnt/data/srv";
      fsType = "none";
      options = [ "bind" ];
    };

  swapDevices = [ ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.end0.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlan0.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "aarch64-linux";
  powerManagement.cpuFreqGovernor = lib.mkDefault "ondemand";
}
